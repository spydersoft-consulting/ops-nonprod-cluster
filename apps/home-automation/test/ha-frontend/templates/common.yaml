---
# Source: ha-frontend/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: ha-frontend
  labels:
    app.kubernetes.io/service: ha-frontend
    app.kubernetes.io/instance: ha-frontend
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ha-frontend
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: ha-frontend-0.1.0
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: ha-frontend
    app.kubernetes.io/name: ha-frontend
---
# Source: ha-frontend/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ha-frontend
  labels:
    app.kubernetes.io/instance: ha-frontend
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ha-frontend
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: ha-frontend-0.1.0
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: ha-frontend
      app.kubernetes.io/instance: ha-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ha-frontend
        app.kubernetes.io/instance: ha-frontend
    spec:
      
      imagePullSecrets:
        - name: cr-spydersoft-github
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: ha-frontend
          image: ghcr.io/spyder007/ha-frontend:0.0.1-bff-client-conversion.9
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 10
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          startupProbe:
            failureThreshold: 30
            initialDelaySeconds: 0
            periodSeconds: 5
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
---
# Source: ha-frontend/templates/common.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ha-frontend
  labels:
    app.kubernetes.io/instance: ha-frontend
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ha-frontend
    app.kubernetes.io/version: 1.0.9
    helm.sh/chart: ha-frontend-0.1.0
    ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: "dashboard.mattgerega.net"
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: ha-frontend
                port:
                  number: 80
